name: Main Workflow

on: push

jobs:
  unit_test:
    name: Run Unit Tests & Report coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Flutter action
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.2'
      - run: flutter pub get
      - name: Unit tests with coverage
        run: flutter test --coverage
      - name: Upload coverage report
        uses: codecov/codecov-action@v1.0.13
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true

  driver_test:
    name: Run iOS Integration Test
    runs-on: macOS-latest

    steps:
      - name: List all simulators
        run: xcrun instruments -s
      - name: Start Simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=iPhone 11 Pro Max (13.7)' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - uses: actions/checkout@v1
      - name: Setup Flutter action
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.2'
      - name: Run Flutter Driver tests
        run: flutter drive --target=test_driver/app.dart

  version:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Create version number
    needs: [unit_test, driver_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: '5.3.x'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.4
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  build_and_deploy:
    name: Build And Deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'skip ci')
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Flutter action
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.2'
      - run: flutter pub get
      - run: flutter build apk --release
      - name: Firebase App distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.2
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: build/app/outputs/apk/release/app-release.apk
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/app-release.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
